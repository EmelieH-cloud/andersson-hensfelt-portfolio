name: Build and deploy React app to Azure Web App - Hemsidan

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # Eftersom React körs på Node.js, används Ubuntu här.

    steps:
      - uses: actions/checkout@v4  # Hämtar koden från GitHub-repositoryt.

      - name: Set up Node.js
        uses: actions/setup-node@v3  # Ställer in Node.js.
        with:
          node-version: '16'  # Eller den version du använder i din React-app.

      - name: Install dependencies
        run: |
          npm install  # Installerar alla npm-paket.

      - name: Build React app
        run: |
          npm run build  # Bygger React-appen och skapar en `build`-mapp med statiska filer.

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: react-app
          path: ./build  # Vägen till byggmappen.

  deploy:
    runs-on: ubuntu-latest  # Använder samma miljö som för byggsteget.

    needs: build  # Detta steg behöver vänta på att byggsteget ska slutföras.

    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: react-app  # Hämtar den byggda React-appen.

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Hemsidan'  # Sätt detta till ditt Azure App Service-namn.
          slot-name: 'Production'  # Om du använder slots, sätt här.
          package: ./build  # Pekar på den byggda React-appen som ska deployas.
